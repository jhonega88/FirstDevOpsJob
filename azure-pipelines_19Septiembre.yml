# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- script: echo Despliegue AKS con Terraform!
  displayName: 'Run a one-line script'
- task: DownloadSecureFile@1
  name: publickey
  inputs:
    secureFile: 'azure_rsa.pub'

- task: TerraformCLI@0
  inputs:
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/aks/kubernetes/'
    backendType: 'azurerm'
    backendServiceArm: 'Visual Studio Professional con MSDN (8995bff8-4129-4a74-ac30-44a16b4cabd4)'
    ensureBackend: true
    backendAzureRmResourceGroupName: 'resposDevOps'
    backendAzureRmResourceGroupLocation: 'eastus'
    backendAzureRmStorageAccountName: 'stgdevopsj'
    backendAzureRmStorageAccountSku: 'StorageV2'
    backendAzureRmContainerName: 'containerjhon'
    backendAzureRmKey: 'k8S2.tfstate'
    allowTelemetryCollection: true


- task: TerraformCLI@0
  inputs:
    command: 'apply'
    workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/aks/kubernetes/'
    environmentServiceName: 'Visual Studio Professional con MSDN (8995bff8-4129-4a74-ac30-44a16b4cabd4)'
    commandOptions: '-var client_id=$(client_id) -var client_secret=$(client_secret) -var ssh_public_key=$(publickey.secureFilePath)'
    allowTelemetryCollection: true